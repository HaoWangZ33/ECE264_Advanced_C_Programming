==37856== Memcheck, a memory error detector
==37856== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==37856== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==37856== Command: ./pe01
==37856== Parent PID: 33912
==37856== 
==37856== Use of uninitialised value of size 8
==37856==    at 0x3DA2C43A9B: _itoa_word (_itoa.c:195)
==37856==    by 0x3DA2C46652: vfprintf (vfprintf.c:1640)
==37856==    by 0x3DA2C4F189: printf (printf.c:35)
==37856==    by 0x400908: printArray (pe01.c:27)
==37856==    by 0x400BEF: test_largest_partial_sum (pe01.c:115)
==37856==    by 0x400D0E: test_00_largest_partial_sum (pe01.c:141)
==37856==    by 0x400D96: main (pe01.c:174)
==37856== 
==37856== Conditional jump or move depends on uninitialised value(s)
==37856==    at 0x3DA2C43AA5: _itoa_word (_itoa.c:195)
==37856==    by 0x3DA2C46652: vfprintf (vfprintf.c:1640)
==37856==    by 0x3DA2C4F189: printf (printf.c:35)
==37856==    by 0x400908: printArray (pe01.c:27)
==37856==    by 0x400BEF: test_largest_partial_sum (pe01.c:115)
==37856==    by 0x400D0E: test_00_largest_partial_sum (pe01.c:141)
==37856==    by 0x400D96: main (pe01.c:174)
==37856== 
==37856== Conditional jump or move depends on uninitialised value(s)
==37856==    at 0x3DA2C450E3: vfprintf (vfprintf.c:1640)
==37856==    by 0x3DA2C4F189: printf (printf.c:35)
==37856==    by 0x400908: printArray (pe01.c:27)
==37856==    by 0x400BEF: test_largest_partial_sum (pe01.c:115)
==37856==    by 0x400D0E: test_00_largest_partial_sum (pe01.c:141)
==37856==    by 0x400D96: main (pe01.c:174)
==37856== 
==37856== Conditional jump or move depends on uninitialised value(s)
==37856==    at 0x3DA2C45101: vfprintf (vfprintf.c:1640)
==37856==    by 0x3DA2C4F189: printf (printf.c:35)
==37856==    by 0x400908: printArray (pe01.c:27)
==37856==    by 0x400BEF: test_largest_partial_sum (pe01.c:115)
==37856==    by 0x400D0E: test_00_largest_partial_sum (pe01.c:141)
==37856==    by 0x400D96: main (pe01.c:174)
==37856== 
==37856== 
==37856== HEAP SUMMARY:
==37856==     in use at exit: 0 bytes in 0 blocks
==37856==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==37856== 
==37856== All heap blocks were freed -- no leaks are possible
==37856== 
==37856== For counts of detected and suppressed errors, rerun with: -v
==37856== Use --track-origins=yes to see where uninitialised values come from
==37856== ERROR SUMMARY: 22 errors from 4 contexts (suppressed: 6 from 6)
